$schema: "https://docs.renovatebot.com/renovate-schema.json"
extends:
  - "config:recommended"      # https://docs.renovatebot.com/presets-config/#configrecommended
  - ":label(renovate)"        # Add label `renovate` to every PRs
  - ":prConcurrentLimit10"    # Limit to maximum 10 open PRs at any time
  - ":prHourlyLimitNone"      # Removes rate limit for PR creation per hour
  - ":timezone(Asia/Tokyo)"
  # - ":rebaseStalePrs"         # Rebase existing PRs any time the base branch has been updated
  - "schedule:nonOfficeHours" # Schedule for typical non-office hours (night time and weekends)
automerge: false
baseBranches:
  - "main"
  - "master"
rangeStrategy: "auto"
internalChecksFilter: "strict" # When and how to filter based on internal checks. All pending releases will be filtered. PRs will be skipped unless a non-pending version is available
minimumReleaseAge: "21 days"    # Time required before a new release is considered stable
digest:
  addLabels:
    - "digest"
pin:
  addLabels:
    - "pin"
patch:
  addLabels:
    - "patch"
minor:
  addLabels:
    - "minor"
major:
  addLabels:
    - "major"
packageRules:
  - groupName: "go"
    addLabels:
      - "go"
    matchDatasources:
      - "go"
  - groupName: "pypi"
    addLabels:
      - "pypi"
    matchDatasources:
      - "pypi"
  - groupName: "npm"
    addLabels:
      - "npm"
    matchDatasources:
      - "npm"
  - groupName: "rubygems"
    addLabels:
      - "rubygems"
    matchDatasources:
      - "rubygems"
  - groupName: "nodejs/node"
    addLabels:
      - "nodejs/node"
    matchDepNames:
      - "nodejs/node"
  - groupName: "golang/go"
    addLabels:
      - "golang/go"
    matchDepNames:
      - "golang/go"
  - groupName: "ruby/ruby"
    addLabels:
      - "ruby/ruby"
    matchDepNames:
      - "ruby/ruby"
  - groupName: "python/cpython"
    addLabels:
      - "python/cpython"
    matchDepNames:
      - "python/cpython"
  - addLabels:
      - "emacs"
    matchFileNames:
      - ".emacs.d/**"
customManagers:
  - customType: "regex"
    description: "Manage yamlfmt used for Emacs"
    fileMatch:
      - ".emacs.d/init.el"
    matchStrings:
      - "github.com/google/yamlfmt/cmd/yamlfmt@(?<currentValue>v\\d+\\.\\d+\\.\\d+)"
    datasourceTemplate: "github-releases"
    depNameTemplate: "google/yamlfmt"
  - customType: "regex"
    description: "Manage go dependencies"
    fileMatch:
      - "^requirements/go.txt$"
    matchStrings:
      - "(?<depName>.*)@(?<currentValue>.*)"
    datasourceTemplate: "go"
  - customType: "regex"
    description: "Manage python dependencies"
    fileMatch:
      - "^requirements/python.txt$"
    matchStrings:
      - "(?<depName>.*)==(?<currentValue>.*)"
    datasourceTemplate: "pypi"
    versioningTemplate: "python"
  - customType: "regex"
    description: "Manage node dependencies"
    fileMatch:
      - "^requirements/node.txt$"
    matchStrings:
      - "(?<depName>.*)@(?<currentValue>.*)"
    datasourceTemplate: "npm"
    versioningTemplate: "npm"
  - customType: "regex"
    description: "Manage ruby dependencies"
    fileMatch:
      - "^requirements/gem.txt$"
    matchStrings:
      - "(?<depName>.*) -v (?<currentValue>\\d+\\.\\d+\\.\\d+)"
    datasourceTemplate: "rubygems"
    versioningTemplate: "semver"
  - customType: "regex"
    description: "Manage node verssion"
    fileMatch: &envFiles
      - "^.zshrc$"
      - "^.envrc$"
    matchStrings:
      - "export NODE_VERSION=(?<currentValue>v\\d+\\.\\d+\\.\\d+)"
    datasourceTemplate: "github-tags"
    depNameTemplate: "nodejs/node"
  - customType: "regex"
    description: "Manage go version"
    fileMatch: *envFiles
    matchStrings:
      - "export GO_VERSION=(?<currentValue>\\d+\\.\\d+\\.\\d+)"
    datasourceTemplate: "github-tags"
    depNameTemplate: "golang/go"
    extractVersionTemplate: "^go(?<version>\\d+\\.\\d+\\.\\d+)$" # remove prefix `go` from datasource
  - customType: "regex"
    description: "Manage ruby version"
    fileMatch: *envFiles
    matchStrings:
      - "export RB_VERSION=(?<currentValue>\\d+\\.\\d+\\.\\d+)"
    datasourceTemplate: "github-releases"
    depNameTemplate: "ruby/ruby"
  - customType: "regex"
    description: "Manage python version"
    fileMatch: *envFiles
    matchStrings:
      - "export PY_VERSION=(?<currentValue>\\d+\\.\\d+\\.\\d+)"
    datasourceTemplate: "github-tags"
    depNameTemplate: "python/cpython"
    extractVersionTemplate: "^v(?<version>\\d+\\.\\d+\\.\\d+)$" # remove prefix `v` from datasource
